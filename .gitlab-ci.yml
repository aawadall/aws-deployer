stages:
  - cleaning
  - build-aws-deployer
  - test-aws-deployer
  - build-aws-deployer-docker
  - test-aws-deployer-docker
  - build-aws-deployer-serverless
  - test-aws-deployer-serverless
  - build-aws-deployer-mysql
  - build-aws-deployer-extension
  - test-aws-deployer-extension
  - publish-aws-deployer
  - publish-aws-deployer-child

before_script:
  - VERSION=$(cat aws-deployer/VERSION)
  
variables:
  REGISTRY: scaniadevtools
  TEST_REGISTRY: registry.gitlab.com/$REGISTRY
  
# For building BASE
.job_template: &test-aws-deployer-template
  stage: test-aws-deployer
  script:
    - aws --version
    - python --version
    - python -c "print('Hello World')"  
  tags:
    - vanilla
  except:
    - schedules
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/

# BASE
build-aws-deployer:
  stage: build-aws-deployer
  before_script:  
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
    - VERSION=$(cat aws-deployer/VERSION)
  script:
    - >
      docker build 
      -t $TEST_REGISTRY/aws-deployer:$VERSION
      -t $TEST_REGISTRY/aws-deployer:latest 
      aws-deployer/.
    - docker push $TEST_REGISTRY/aws-deployer:latest
    - docker push $TEST_REGISTRY/aws-deployer:$VERSION
  tags: 
    - docker
  except:
    - schedules
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/

# For BASE
test-aws-deployer-latest:
  image:  $TEST_REGISTRY/aws-deployer:latest
  <<: *test-aws-deployer-template

# For BASE
test-aws-deployer-empty:
  image:  $TEST_REGISTRY/aws-deployer
  <<: *test-aws-deployer-template

# For BASE
publish-aws-deployer:
  stage: publish-aws-deployer
  before_script:
    - VERSION=$(cat aws-deployer/VERSION)
    - docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
  script:
    - docker pull $TEST_REGISTRY/aws-deployer:latest
    - docker tag $TEST_REGISTRY/aws-deployer:latest $REGISTRY/aws-deployer:latest
    - docker push $REGISTRY/aws-deployer:latest
    - docker pull $TEST_REGISTRY/aws-deployer:$VERSION
    - docker tag $TEST_REGISTRY/aws-deployer:$VERSION $REGISTRY/aws-deployer:$VERSION
    - docker push $REGISTRY/aws-deployer:$VERSION    
  tags:
    - docker
  except:
    - schedules
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
  dependencies:
    - test-aws-deployer-latest



# For building extensions
.job_template: &build-aws-deployer-extension-template
  stage: build-aws-deployer-extension
  before_script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
    - VERSION=$(cat aws-deployer/VERSION)
  script:
    - >
      docker build 
      -t $TEST_REGISTRY/aws-deployer:$VERSION-$EXTENSION 
      -t $TEST_REGISTRY/aws-deployer:$EXTENSION
      aws-deployer-$EXTENSION/.    
    - docker push $TEST_REGISTRY/aws-deployer:$VERSION-$EXTENSION
    - docker push $TEST_REGISTRY/aws-deployer:$EXTENSION
  tags:
    - docker
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
    - /^feature-*/
  except:
    - schedules
  dependencies:
    - test-aws-deployer-latest

# For docker
build-aws-deployer-docker:
  variables:
    EXTENSION: docker
  <<: *build-aws-deployer-extension-template
##################

    
test-aws-deployer-docker:
  image:  $TEST_REGISTRY/aws-deployer:docker 
  stage: test-aws-deployer-extension
  script:
    - aws --version
    - docker build aws-deployer-docker/test/
  tags:
    - docker
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
    - /^feature-*/
  except:
    - schedules
  dependencies:
    - build-aws-deployer-docker

# For docker
publish-aws-deployer-docker:
  stage: publish-aws-deployer-child
  before_script:
    - VERSION=$(cat aws-deployer/VERSION)
    - docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
  script:
    - docker pull $TEST_REGISTRY/aws-deployer:docker
    - docker tag $TEST_REGISTRY/aws-deployer:docker $REGISTRY/aws-deployer:docker
    - docker push $REGISTRY/aws-deployer:docker
    - docker pull $TEST_REGISTRY/aws-deployer:$VERSION-docker
    - docker tag $TEST_REGISTRY/aws-deployer:$VERSION-docker $REGISTRY/aws-deployer:$VERSION-docker
    - docker push $REGISTRY/aws-deployer:$VERSION-docker
  tags:
    - docker
  except:
    - schedules
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
  dependencies:
     - test-aws-deployer-docker
     - publish-aws-deployer

# For serverless
build-aws-deployer-serverless:
  variables:
    EXTENSION: serverless
  <<: *build-aws-deployer-extension-template

# For serverless
test-aws-deployer-serverless:
  image:  $TEST_REGISTRY/aws-deployer:serverless 
  stage: test-aws-deployer-extension
  script:
    - aws --version
    - serverless --version
  tags:
    - docker
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
    - /^feature-*/
  except:
    - schedules
  dependencies:
    - build-aws-deployer-serverless

# For serverless
publish-aws-deployer-serverless:
  stage: publish-aws-deployer-child
  before_script:
    - VERSION=$(cat aws-deployer/VERSION)
    - docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
  script:
    - docker pull $TEST_REGISTRY/aws-deployer:serverless
    - docker tag $TEST_REGISTRY/aws-deployer:serverless $REGISTRY/aws-deployer:serverless
    - docker push $REGISTRY/aws-deployer:serverless
    - docker pull $TEST_REGISTRY/aws-deployer:$VERSION-serverless
    - docker tag $TEST_REGISTRY/aws-deployer:$VERSION-serverless $REGISTRY/aws-deployer:$VERSION-serverless
    - docker push $REGISTRY/aws-deployer:$VERSION-serverless
  tags:
    - docker
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
  except:
    - schedules
  dependencies:
     - test-aws-deployer-serverless
     - publish-aws-deployer

# For mysql
build-aws-deployer-mysql:
  variables:
    EXTENSION: mysql
  <<: *build-aws-deployer-extension-template

# For mysql
test-aws-deployer-mysql:
  image:  $TEST_REGISTRY/aws-deployer:mysql 
  stage: test-aws-deployer-extension
  script:
    - aws --version
    - mysql --version
  tags:
    - docker
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
    - /^feature-*/
  except:
    - schedules
  dependencies:
    - build-aws-deployer-mysql

## For Ansible
build-aws-deployer-ansible:
  variables:
    EXTENSION: ansible
  <<: *build-aws-deployer-extension-template

## For Ansible
test-aws-deployer-ansible:
  image:  $TEST_REGISTRY/aws-deployer:ansible
  stage: test-aws-deployer-extension
  script:
    - aws --version
    - ansible --version
  tags:
    - docker
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
    - /^feature-*/
  except:
    - schedules
  dependencies:
    - build-aws-deployer-ansible

# PUBLISH

## For mysql
publish-aws-deployer-mysql:
  variables:
    EXTENSION: mysql
  stage: publish-aws-deployer-child
  before_script:
    - VERSION=$(cat aws-deployer/VERSION)
    - docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
  script:
    - docker pull $TEST_REGISTRY/aws-deployer:$EXTENSION
    - docker tag $TEST_REGISTRY/aws-deployer:mysql $REGISTRY/aws-deployer:$EXTENSION
    - docker push $REGISTRY/aws-deployer:$EXTENSION
    - docker pull $TEST_REGISTRY/aws-deployer:$VERSION-$EXTENSION
    - docker tag $TEST_REGISTRY/aws-deployer:$VERSION-$EXTENSION $REGISTRY/aws-deployer:$VERSION-$EXTENSION
    - docker push $REGISTRY/aws-deployer:$VERSION-$EXTENSION
  tags:
    - docker
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
  except:
    - schedules
  dependencies:
     - test-aws-deployer-mysql
     - publish-aws-deployer

publish-aws-deployer-ansible:
  variables:
    EXTENSION: ansible
  stage: publish-aws-deployer-child
  before_script:
    - VERSION=$(cat aws-deployer/VERSION)
    - docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
  script:
    - docker pull $TEST_REGISTRY/aws-deployer:$EXTENSION
    - docker tag $TEST_REGISTRY/aws-deployer:mysql $REGISTRY/aws-deployer:$EXTENSION
    - docker push $REGISTRY/aws-deployer:$EXTENSION
    - docker pull $TEST_REGISTRY/aws-deployer:$VERSION-$EXTENSION
    - docker tag $TEST_REGISTRY/aws-deployer:$VERSION-$EXTENSION $REGISTRY/aws-deployer:$VERSION-$EXTENSION
    - docker push $REGISTRY/aws-deployer:$VERSION-$EXTENSION
  tags:
    - docker
  only:
    - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
  except:
    - schedules
  dependencies:
     - test-aws-deployer-ansible
     - publish-aws-deployer
# Scheduled cleaning
cleaning:
  image: docker:stable
  stage: cleaning
  only:
    - schedules
  script:
    - docker image prune -a -f
  tags:
    - docker

